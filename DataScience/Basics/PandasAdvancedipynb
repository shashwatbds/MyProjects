{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "PandasAdvanced-DIY-SV.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5TICyPHKEOGg"
      },
      "source": [
        "# Pandas Advanced DIY Assignment"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Be8o2xmLEbiK"
      },
      "source": [
        "# import required libraries here\n",
        "import numpy as np\n",
        "import pandas as pd"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xWdPYQAzEHot",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "outputId": "9773acd1-4290-4c97-8ce8-9d9d61ae6e0e"
      },
      "source": [
        "# Q1: Define the student record Dataframe used in the Pandas DIY assignment\n",
        "# make sure your column name follows the following convention:\n",
        "# ['student_id', 'student_name', 'student_age', 'student_gender', 'student_course']\n",
        "df = pd.DataFrame({\n",
        "\n",
        "    'student_id': [2,10,4,5,1,7,8,6,9,3],\n",
        "\n",
        "    'student_name': ['Araceli','Martin','Diann','Stacey','Leticia','Roxane','Venice','Jacquelyne','Erich','Linda'],\n",
        "\n",
        "    'student_age': [23,45,26,32,29,34,24,27,38,35],\n",
        "\n",
        "    'student_gender': ['M','F','TG','F','M','F','TG','F','M','F'],\n",
        "\n",
        "    'student_course': ['PP','EX','PP','NPP','EX','NPP','PP','NPP','PP','NPP']\n",
        "\n",
        "})\n",
        "\n",
        "df"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>Araceli</td>\n",
              "      <td>23</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10</td>\n",
              "      <td>Martin</td>\n",
              "      <td>45</td>\n",
              "      <td>F</td>\n",
              "      <td>EX</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>Diann</td>\n",
              "      <td>26</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>Stacey</td>\n",
              "      <td>32</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Leticia</td>\n",
              "      <td>29</td>\n",
              "      <td>M</td>\n",
              "      <td>EX</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7</td>\n",
              "      <td>Roxane</td>\n",
              "      <td>34</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Erich</td>\n",
              "      <td>38</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>3</td>\n",
              "      <td>Linda</td>\n",
              "      <td>35</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  student_age student_gender student_course\n",
              "0           2      Araceli           23              M             PP\n",
              "1          10       Martin           45              F             EX\n",
              "2           4        Diann           26             TG             PP\n",
              "3           5       Stacey           32              F            NPP\n",
              "4           1      Leticia           29              M             EX\n",
              "5           7       Roxane           34              F            NPP\n",
              "6           8       Venice           24             TG             PP\n",
              "7           6   Jacquelyne           27              F            NPP\n",
              "8           9        Erich           38              M             PP\n",
              "9           3        Linda           35              F            NPP"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DJMivUWkEzV1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "49aff39c-5c6b-40ad-e031-d751d7685805"
      },
      "source": [
        "# Q2: print information, shape and rank\n",
        "print(df.shape)\n",
        "print(df.info)\n",
        "print(df.describe())\n",
        "print(df.rank())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(10, 5)\n",
            "<bound method DataFrame.info of    student_id student_name  student_age student_gender student_course\n",
            "0           2      Araceli           23              M             PP\n",
            "1          10       Martin           45              F             EX\n",
            "2           4        Diann           26             TG             PP\n",
            "3           5       Stacey           32              F            NPP\n",
            "4           1      Leticia           29              M             EX\n",
            "5           7       Roxane           34              F            NPP\n",
            "6           8       Venice           24             TG             PP\n",
            "7           6   Jacquelyne           27              F            NPP\n",
            "8           9        Erich           38              M             PP\n",
            "9           3        Linda           35              F            NPP>\n",
            "       student_id  student_age\n",
            "count    10.00000    10.000000\n",
            "mean      5.50000    31.300000\n",
            "std       3.02765     6.896859\n",
            "min       1.00000    23.000000\n",
            "25%       3.25000    26.250000\n",
            "50%       5.50000    30.500000\n",
            "75%       7.75000    34.750000\n",
            "max      10.00000    45.000000\n",
            "   student_id  student_name  student_age  student_gender  student_course\n",
            "0         2.0           1.0          1.0             7.0             8.5\n",
            "1        10.0           7.0         10.0             3.0             1.5\n",
            "2         4.0           2.0          3.0             9.5             8.5\n",
            "3         5.0           9.0          6.0             3.0             4.5\n",
            "4         1.0           5.0          5.0             7.0             1.5\n",
            "5         7.0           8.0          7.0             3.0             4.5\n",
            "6         8.0          10.0          2.0             9.5             8.5\n",
            "7         6.0           4.0          4.0             3.0             4.5\n",
            "8         9.0           3.0          9.0             7.0             8.5\n",
            "9         3.0           6.0          8.0             3.0             4.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2OVC6qlzKM0w",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "outputId": "09724b99-9f30-4a2e-f72c-ddb89d6533ff"
      },
      "source": [
        "# Q3: add NaN for Diann and Erich's age \n",
        "# and Martin and Linda's student course\n",
        "df.loc[2,'student_age'] = None\n",
        "df.loc[8,'student_age'] = None\n",
        "df.loc[1,'student_course'] = None\n",
        "df.loc[9,'student_course'] = None\n",
        "df"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>Araceli</td>\n",
              "      <td>23.0</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10</td>\n",
              "      <td>Martin</td>\n",
              "      <td>45.0</td>\n",
              "      <td>F</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>Diann</td>\n",
              "      <td>NaN</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>Stacey</td>\n",
              "      <td>32.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Leticia</td>\n",
              "      <td>29.0</td>\n",
              "      <td>M</td>\n",
              "      <td>EX</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7</td>\n",
              "      <td>Roxane</td>\n",
              "      <td>34.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24.0</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Erich</td>\n",
              "      <td>NaN</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>3</td>\n",
              "      <td>Linda</td>\n",
              "      <td>35.0</td>\n",
              "      <td>F</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  student_age student_gender student_course\n",
              "0           2      Araceli         23.0              M             PP\n",
              "1          10       Martin         45.0              F           None\n",
              "2           4        Diann          NaN             TG             PP\n",
              "3           5       Stacey         32.0              F            NPP\n",
              "4           1      Leticia         29.0              M             EX\n",
              "5           7       Roxane         34.0              F            NPP\n",
              "6           8       Venice         24.0             TG             PP\n",
              "7           6   Jacquelyne         27.0              F            NPP\n",
              "8           9        Erich          NaN              M             PP\n",
              "9           3        Linda         35.0              F           None"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V6iBniJpRD_z",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "889977c5-38fb-4b41-c91b-9da431a7584a"
      },
      "source": [
        "# Q4: Count the number of non-NA observations for each column\n",
        "df.count()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "student_id        10\n",
              "student_name      10\n",
              "student_age        8\n",
              "student_gender    10\n",
              "student_course     8\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "q3UJ0i_LKpYd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 235
        },
        "outputId": "1656d071-7e79-4ed1-a2e2-21ebca59b8b2"
      },
      "source": [
        "# Q5: Drop all rows with missing values (make sure its not inplace)\n",
        "df.dropna(inplace=False)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>Araceli</td>\n",
              "      <td>23.0</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>Stacey</td>\n",
              "      <td>32.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Leticia</td>\n",
              "      <td>29.0</td>\n",
              "      <td>M</td>\n",
              "      <td>EX</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7</td>\n",
              "      <td>Roxane</td>\n",
              "      <td>34.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24.0</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  student_age student_gender student_course\n",
              "0           2      Araceli         23.0              M             PP\n",
              "3           5       Stacey         32.0              F            NPP\n",
              "4           1      Leticia         29.0              M             EX\n",
              "5           7       Roxane         34.0              F            NPP\n",
              "6           8       Venice         24.0             TG             PP\n",
              "7           6   Jacquelyne         27.0              F            NPP"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "id": "m-GPDanqWcGe",
        "outputId": "7919666f-0370-42b1-f82f-dcd03e530066"
      },
      "source": [
        "df"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>Araceli</td>\n",
              "      <td>23.0</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10</td>\n",
              "      <td>Martin</td>\n",
              "      <td>45.0</td>\n",
              "      <td>F</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>Diann</td>\n",
              "      <td>NaN</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>Stacey</td>\n",
              "      <td>32.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Leticia</td>\n",
              "      <td>29.0</td>\n",
              "      <td>M</td>\n",
              "      <td>EX</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7</td>\n",
              "      <td>Roxane</td>\n",
              "      <td>34.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24.0</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Erich</td>\n",
              "      <td>NaN</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>3</td>\n",
              "      <td>Linda</td>\n",
              "      <td>35.0</td>\n",
              "      <td>F</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  student_age student_gender student_course\n",
              "0           2      Araceli         23.0              M             PP\n",
              "1          10       Martin         45.0              F           None\n",
              "2           4        Diann          NaN             TG             PP\n",
              "3           5       Stacey         32.0              F            NPP\n",
              "4           1      Leticia         29.0              M             EX\n",
              "5           7       Roxane         34.0              F            NPP\n",
              "6           8       Venice         24.0             TG             PP\n",
              "7           6   Jacquelyne         27.0              F            NPP\n",
              "8           9        Erich          NaN              M             PP\n",
              "9           3        Linda         35.0              F           None"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gobQdJ3wLMST",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "b0e84a9e-cb0f-413d-cc1a-09c339f75e58"
      },
      "source": [
        "# Q6: Drop only rows with missing values for student course (make sure its not inplace)\n",
        "df.dropna(subset=['student_course'],inplace=False)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>Araceli</td>\n",
              "      <td>23.0</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>Diann</td>\n",
              "      <td>NaN</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>Stacey</td>\n",
              "      <td>32.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Leticia</td>\n",
              "      <td>29.0</td>\n",
              "      <td>M</td>\n",
              "      <td>EX</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7</td>\n",
              "      <td>Roxane</td>\n",
              "      <td>34.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24.0</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27.0</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Erich</td>\n",
              "      <td>NaN</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  student_age student_gender student_course\n",
              "0           2      Araceli         23.0              M             PP\n",
              "2           4        Diann          NaN             TG             PP\n",
              "3           5       Stacey         32.0              F            NPP\n",
              "4           1      Leticia         29.0              M             EX\n",
              "5           7       Roxane         34.0              F            NPP\n",
              "6           8       Venice         24.0             TG             PP\n",
              "7           6   Jacquelyne         27.0              F            NPP\n",
              "8           9        Erich          NaN              M             PP"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XAAHqVELLS3f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "outputId": "faaab555-8734-4397-8643-45c1e464292a"
      },
      "source": [
        "# Q7: fill missing student ages with suitable value\n",
        "# justify choice of your replacement value\n",
        "# this can be inplace\n",
        "#df.fillna(method='bfill')\n",
        "# print(df['student_age'].agg(np.mean))\n",
        "df.fillna({'student_age':df['student_age'].agg(np.mean)}, inplace=True)\n",
        "df\n",
        "\n",
        "# Adding mean age"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>Araceli</td>\n",
              "      <td>23.000</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10</td>\n",
              "      <td>Martin</td>\n",
              "      <td>45.000</td>\n",
              "      <td>F</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>Diann</td>\n",
              "      <td>31.125</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>Stacey</td>\n",
              "      <td>32.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Leticia</td>\n",
              "      <td>29.000</td>\n",
              "      <td>M</td>\n",
              "      <td>EX</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7</td>\n",
              "      <td>Roxane</td>\n",
              "      <td>34.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24.000</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Erich</td>\n",
              "      <td>31.125</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>3</td>\n",
              "      <td>Linda</td>\n",
              "      <td>35.000</td>\n",
              "      <td>F</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  student_age student_gender student_course\n",
              "0           2      Araceli       23.000              M             PP\n",
              "1          10       Martin       45.000              F           None\n",
              "2           4        Diann       31.125             TG             PP\n",
              "3           5       Stacey       32.000              F            NPP\n",
              "4           1      Leticia       29.000              M             EX\n",
              "5           7       Roxane       34.000              F            NPP\n",
              "6           8       Venice       24.000             TG             PP\n",
              "7           6   Jacquelyne       27.000              F            NPP\n",
              "8           9        Erich       31.125              M             PP\n",
              "9           3        Linda       35.000              F           None"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3dPcUPDqMyxg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "outputId": "a6aeeac3-0f53-4fb0-8997-1f657eb26902"
      },
      "source": [
        "# Q8: Deal with the missing values in student_course\n",
        "# justify the reason behind your choice\n",
        "# print(df.mode()['student_course'][0])\n",
        "df.fillna({'student_course':df.mode()['student_course'][0]}, inplace=True)\n",
        "df"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>Araceli</td>\n",
              "      <td>23.000</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10</td>\n",
              "      <td>Martin</td>\n",
              "      <td>45.000</td>\n",
              "      <td>F</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>Diann</td>\n",
              "      <td>31.125</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>Stacey</td>\n",
              "      <td>32.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Leticia</td>\n",
              "      <td>29.000</td>\n",
              "      <td>M</td>\n",
              "      <td>EX</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7</td>\n",
              "      <td>Roxane</td>\n",
              "      <td>34.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24.000</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Erich</td>\n",
              "      <td>31.125</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>3</td>\n",
              "      <td>Linda</td>\n",
              "      <td>35.000</td>\n",
              "      <td>F</td>\n",
              "      <td>PP</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  student_age student_gender student_course\n",
              "0           2      Araceli       23.000              M             PP\n",
              "1          10       Martin       45.000              F             PP\n",
              "2           4        Diann       31.125             TG             PP\n",
              "3           5       Stacey       32.000              F            NPP\n",
              "4           1      Leticia       29.000              M             EX\n",
              "5           7       Roxane       34.000              F            NPP\n",
              "6           8       Venice       24.000             TG             PP\n",
              "7           6   Jacquelyne       27.000              F            NPP\n",
              "8           9        Erich       31.125              M             PP\n",
              "9           3        Linda       35.000              F             PP"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LoLLbpkPULvg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "outputId": "1e528054-31ba-49ee-9922-c670c7c11b8c"
      },
      "source": [
        "# Q9: Add a new column \"student_marks\" with the following values\n",
        "77,57,74,64,59,63,67,91,79,83\n",
        "marks = [77,57,74,64,59,63,67,91,79,83]\n",
        "df['student_marks'] = marks\n",
        "df"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "      <th>student_marks</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>Araceli</td>\n",
              "      <td>23.000</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10</td>\n",
              "      <td>Martin</td>\n",
              "      <td>45.000</td>\n",
              "      <td>F</td>\n",
              "      <td>PP</td>\n",
              "      <td>57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>Diann</td>\n",
              "      <td>31.125</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "      <td>74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>Stacey</td>\n",
              "      <td>32.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "      <td>64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Leticia</td>\n",
              "      <td>29.000</td>\n",
              "      <td>M</td>\n",
              "      <td>EX</td>\n",
              "      <td>59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7</td>\n",
              "      <td>Roxane</td>\n",
              "      <td>34.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24.000</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "      <td>67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "      <td>91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Erich</td>\n",
              "      <td>31.125</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>3</td>\n",
              "      <td>Linda</td>\n",
              "      <td>35.000</td>\n",
              "      <td>F</td>\n",
              "      <td>PP</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  ...  student_course student_marks\n",
              "0           2      Araceli  ...              PP            77\n",
              "1          10       Martin  ...              PP            57\n",
              "2           4        Diann  ...              PP            74\n",
              "3           5       Stacey  ...             NPP            64\n",
              "4           1      Leticia  ...              EX            59\n",
              "5           7       Roxane  ...             NPP            63\n",
              "6           8       Venice  ...              PP            67\n",
              "7           6   Jacquelyne  ...             NPP            91\n",
              "8           9        Erich  ...              PP            79\n",
              "9           3        Linda  ...              PP            83\n",
              "\n",
              "[10 rows x 6 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Qe320azdNrjq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5abd7123-6651-4095-b0ad-af1b1a8f2112"
      },
      "source": [
        "# Q10: print the average age and marks of all students\n",
        "print(np.mean(df['student_age']))\n",
        "print(np.mean(df['student_marks']))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "31.125\n",
            "71.4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d7Hbj3x5UdWp",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "acc9a002-3d0e-4788-9efa-350d08aa82fc"
      },
      "source": [
        "# Q11: find the maximum marks and student's name\n",
        "max_marks = np.max(df['student_marks'])\n",
        "# print(max_marks)\n",
        "df[df['student_marks'] == max_marks]['student_name']"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "7    Jacquelyne\n",
              "Name: student_name, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PdYS4ZLhVTms",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7cc770c6-1cb7-4477-b97f-5c68dcab5296"
      },
      "source": [
        "# Q12: find the range of student's age\n",
        "#max-min\n",
        "min = np.min(df['student_age'])\n",
        "max = np.max(df['student_age'])\n",
        "print(max-min)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "22.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "or9ciddbOQR9"
      },
      "source": [
        "# Q13: write your current data frame to a csv file \n",
        "df.to_csv('student.csv',index=None)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J2h6w-SgPtm7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "outputId": "59dc76f7-ebb5-452c-d403-ed84fa2981c4"
      },
      "source": [
        "# Q14: read from the csv file saved in previous step and make sure you have exactly\n",
        "# the same dataframe as previously\n",
        "df1=pd.read_csv('student.csv')\n",
        "df1"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "      <th>student_marks</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>Araceli</td>\n",
              "      <td>23.000</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10</td>\n",
              "      <td>Martin</td>\n",
              "      <td>45.000</td>\n",
              "      <td>F</td>\n",
              "      <td>PP</td>\n",
              "      <td>57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>Diann</td>\n",
              "      <td>31.125</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "      <td>74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>Stacey</td>\n",
              "      <td>32.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "      <td>64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Leticia</td>\n",
              "      <td>29.000</td>\n",
              "      <td>M</td>\n",
              "      <td>EX</td>\n",
              "      <td>59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7</td>\n",
              "      <td>Roxane</td>\n",
              "      <td>34.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24.000</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "      <td>67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "      <td>91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Erich</td>\n",
              "      <td>31.125</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>3</td>\n",
              "      <td>Linda</td>\n",
              "      <td>35.000</td>\n",
              "      <td>F</td>\n",
              "      <td>PP</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  ...  student_course student_marks\n",
              "0           2      Araceli  ...              PP            77\n",
              "1          10       Martin  ...              PP            57\n",
              "2           4        Diann  ...              PP            74\n",
              "3           5       Stacey  ...             NPP            64\n",
              "4           1      Leticia  ...              EX            59\n",
              "5           7       Roxane  ...             NPP            63\n",
              "6           8       Venice  ...              PP            67\n",
              "7           6   Jacquelyne  ...             NPP            91\n",
              "8           9        Erich  ...              PP            79\n",
              "9           3        Linda  ...              PP            83\n",
              "\n",
              "[10 rows x 6 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jY6JbQh-S9ww",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "outputId": "cded67e2-c8d6-4d1d-c596-b0920b977cef"
      },
      "source": [
        "# Q15: Add a new column \"student_hobbies\" with the following values\n",
        "# 'Gaming','Dancing','Sports','Dancing', 'Traveling', 'Gaming', 'Sports', 'Sports', 'Traveling','Dancing'\n",
        "hobbies = ['Gaming','Dancing','Sports','Dancing', 'Traveling', 'Gaming', 'Sports', 'Sports', 'Traveling','Dancing']\n",
        "df['hobbies'] = hobbies\n",
        "df"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "      <th>student_marks</th>\n",
              "      <th>hobbies</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>Araceli</td>\n",
              "      <td>23.000</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "      <td>77</td>\n",
              "      <td>Gaming</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10</td>\n",
              "      <td>Martin</td>\n",
              "      <td>45.000</td>\n",
              "      <td>F</td>\n",
              "      <td>PP</td>\n",
              "      <td>57</td>\n",
              "      <td>Dancing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>Diann</td>\n",
              "      <td>31.125</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "      <td>74</td>\n",
              "      <td>Sports</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5</td>\n",
              "      <td>Stacey</td>\n",
              "      <td>32.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "      <td>64</td>\n",
              "      <td>Dancing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>Leticia</td>\n",
              "      <td>29.000</td>\n",
              "      <td>M</td>\n",
              "      <td>EX</td>\n",
              "      <td>59</td>\n",
              "      <td>Traveling</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>7</td>\n",
              "      <td>Roxane</td>\n",
              "      <td>34.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "      <td>63</td>\n",
              "      <td>Gaming</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24.000</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "      <td>67</td>\n",
              "      <td>Sports</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "      <td>91</td>\n",
              "      <td>Sports</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Erich</td>\n",
              "      <td>31.125</td>\n",
              "      <td>M</td>\n",
              "      <td>PP</td>\n",
              "      <td>79</td>\n",
              "      <td>Traveling</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>3</td>\n",
              "      <td>Linda</td>\n",
              "      <td>35.000</td>\n",
              "      <td>F</td>\n",
              "      <td>PP</td>\n",
              "      <td>83</td>\n",
              "      <td>Dancing</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  ...  student_marks    hobbies\n",
              "0           2      Araceli  ...             77     Gaming\n",
              "1          10       Martin  ...             57    Dancing\n",
              "2           4        Diann  ...             74     Sports\n",
              "3           5       Stacey  ...             64    Dancing\n",
              "4           1      Leticia  ...             59  Traveling\n",
              "5           7       Roxane  ...             63     Gaming\n",
              "6           8       Venice  ...             67     Sports\n",
              "7           6   Jacquelyne  ...             91     Sports\n",
              "8           9        Erich  ...             79  Traveling\n",
              "9           3        Linda  ...             83    Dancing\n",
              "\n",
              "[10 rows x 7 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Lukl614zQtjF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f5eacf8c-2259-408f-8017-cf8a7e13f6fc"
      },
      "source": [
        "# Q16: group based on student's course\n",
        "df.groupby('student_course').groups"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'EX': [4], 'NPP': [3, 5, 7], 'PP': [0, 1, 2, 6, 8, 9]}"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "z4M9tJJtVWVE",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "23e1cd3f-336f-4ff9-b85e-644078186c53"
      },
      "source": [
        "# Q17: group student by their hobby and their course type\n",
        "df.groupby(['hobbies','student_course']).groups"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{('Dancing', 'NPP'): [3], ('Dancing', 'PP'): [1, 9], ('Gaming', 'NPP'): [5], ('Gaming', 'PP'): [0], ('Sports', 'NPP'): [7], ('Sports', 'PP'): [2, 6], ('Traveling', 'EX'): [4], ('Traveling', 'PP'): [8]}"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3AHCkPqIVjBK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 142
        },
        "outputId": "224c6fb1-71e2-4b7d-d900-fb061a22c054"
      },
      "source": [
        "# Q18: find the standard deviation of the marks for students whose hobby is Sports\n",
        "df_gb = df.groupby('hobbies')\n",
        "df_gb.get_group('Sports')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>student_id</th>\n",
              "      <th>student_name</th>\n",
              "      <th>student_age</th>\n",
              "      <th>student_gender</th>\n",
              "      <th>student_course</th>\n",
              "      <th>student_marks</th>\n",
              "      <th>hobbies</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>Diann</td>\n",
              "      <td>31.125</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "      <td>74</td>\n",
              "      <td>Sports</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>Venice</td>\n",
              "      <td>24.000</td>\n",
              "      <td>TG</td>\n",
              "      <td>PP</td>\n",
              "      <td>67</td>\n",
              "      <td>Sports</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>6</td>\n",
              "      <td>Jacquelyne</td>\n",
              "      <td>27.000</td>\n",
              "      <td>F</td>\n",
              "      <td>NPP</td>\n",
              "      <td>91</td>\n",
              "      <td>Sports</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   student_id student_name  student_age  ... student_course student_marks  hobbies\n",
              "2           4        Diann       31.125  ...             PP            74   Sports\n",
              "6           8       Venice       24.000  ...             PP            67   Sports\n",
              "7           6   Jacquelyne       27.000  ...            NPP            91   Sports\n",
              "\n",
              "[3 rows x 7 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dO3aLB6DKSlw"
      },
      "source": [
        "#########################################"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IKEZOG_MX8IU"
      },
      "source": [
        "# Pivot, Concat and Stack etc."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gJGdBFbZYD6D"
      },
      "source": [
        "Download the two excel files from beow links - \n",
        "\n",
        "1) https://kingston.box.com/s/cjqig6cfdz55m4cmcb7l1ox71nztdirc\n",
        "\n",
        "2) https://kingston.box.com/s/dt4m4nlazquxk1dnzxcwjgzu3f5o1bnk\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uXMA_4nrV2U_"
      },
      "source": [
        "# Q19: read the two csv files\n",
        "df1 = pd.read_excel('D1-P1.xlsx')\n",
        "df2 = pd.read_excel('D1-P2.xlsx')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1z3u0S66Y_JX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4e595a09-e36d-45c8-85a1-631081f4723d"
      },
      "source": [
        "# Q20: read the two csv files\n",
        "print(df1)\n",
        "print(df2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "        date      City  Temperature\n",
            "0 2021-10-01    London           18\n",
            "1 2021-10-02    London           11\n",
            "2 2021-10-03    London           -2\n",
            "3 2021-10-04    London            1\n",
            "4 2021-10-05    London            9\n",
            "5 2021-10-01  New York            0\n",
            "6 2021-10-02  New York            5\n",
            "7 2021-10-03  New York            8\n",
            "8 2021-10-04  New York           -1\n",
            "9 2021-10-05  New York           10\n",
            "        date    City  Temperature\n",
            "0 2021-10-01   Paris            6\n",
            "1 2021-10-02   Paris           14\n",
            "2 2021-10-03   Paris           -5\n",
            "3 2021-10-04   Paris            6\n",
            "4 2021-10-05   Paris           18\n",
            "5 2021-10-01  Berlin            9\n",
            "6 2021-10-02  Berlin           10\n",
            "7 2021-10-03  Berlin            3\n",
            "8 2021-10-04  Berlin           -4\n",
            "9 2021-10-05  Berlin            4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DkNaTPnmYJKw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 669
        },
        "outputId": "c7053da0-01e8-4814-8db6-3528879140e2"
      },
      "source": [
        "# Q21: concat them into a single dataframe (outer join)\n",
        "frames = [df1, df2]\n",
        "df_concat_outer = pd.concat(\n",
        "    frames,\n",
        "    # axis=0,\n",
        "    join=\"outer\",\n",
        "    # ignore_index=False,\n",
        "    # keys=None,\n",
        "    # levels=None,\n",
        "    # names=None,\n",
        "    # verify_integrity=False,\n",
        "    copy=True,\n",
        ")\n",
        "df_concat_outer"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>City</th>\n",
              "      <th>Temperature</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>London</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>London</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>London</td>\n",
              "      <td>-2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>London</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>London</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>New York</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>New York</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>New York</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>New York</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>New York</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>Paris</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>Paris</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>Paris</td>\n",
              "      <td>-5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>Paris</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>Paris</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>-4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        date      City  Temperature\n",
              "0 2021-10-01    London           18\n",
              "1 2021-10-02    London           11\n",
              "2 2021-10-03    London           -2\n",
              "3 2021-10-04    London            1\n",
              "4 2021-10-05    London            9\n",
              "5 2021-10-01  New York            0\n",
              "6 2021-10-02  New York            5\n",
              "7 2021-10-03  New York            8\n",
              "8 2021-10-04  New York           -1\n",
              "9 2021-10-05  New York           10\n",
              "0 2021-10-01     Paris            6\n",
              "1 2021-10-02     Paris           14\n",
              "2 2021-10-03     Paris           -5\n",
              "3 2021-10-04     Paris            6\n",
              "4 2021-10-05     Paris           18\n",
              "5 2021-10-01    Berlin            9\n",
              "6 2021-10-02    Berlin           10\n",
              "7 2021-10-03    Berlin            3\n",
              "8 2021-10-04    Berlin           -4\n",
              "9 2021-10-05    Berlin            4"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TTR-ZFoiYaIm",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 669
        },
        "outputId": "948fc459-5a16-45c5-9043-25e1fa4251c9"
      },
      "source": [
        "# Q22: concat them into a single dataframe (inner join)\n",
        "df_concat_inner = pd.concat(\n",
        "    frames,\n",
        "    # axis=0,\n",
        "    join=\"inner\",\n",
        "    # ignore_index=False,\n",
        "    # keys=None,\n",
        "    # levels=None,\n",
        "    # names=None,\n",
        "    # verify_integrity=False,\n",
        "    copy=True,\n",
        ")\n",
        "df_concat_inner"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>City</th>\n",
              "      <th>Temperature</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>London</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>London</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>London</td>\n",
              "      <td>-2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>London</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>London</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>New York</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>New York</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>New York</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>New York</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>New York</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>Paris</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>Paris</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>Paris</td>\n",
              "      <td>-5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>Paris</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>Paris</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>-4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        date      City  Temperature\n",
              "0 2021-10-01    London           18\n",
              "1 2021-10-02    London           11\n",
              "2 2021-10-03    London           -2\n",
              "3 2021-10-04    London            1\n",
              "4 2021-10-05    London            9\n",
              "5 2021-10-01  New York            0\n",
              "6 2021-10-02  New York            5\n",
              "7 2021-10-03  New York            8\n",
              "8 2021-10-04  New York           -1\n",
              "9 2021-10-05  New York           10\n",
              "0 2021-10-01     Paris            6\n",
              "1 2021-10-02     Paris           14\n",
              "2 2021-10-03     Paris           -5\n",
              "3 2021-10-04     Paris            6\n",
              "4 2021-10-05     Paris           18\n",
              "5 2021-10-01    Berlin            9\n",
              "6 2021-10-02    Berlin           10\n",
              "7 2021-10-03    Berlin            3\n",
              "8 2021-10-04    Berlin           -4\n",
              "9 2021-10-05    Berlin            4"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RZXWV2UCZwQP"
      },
      "source": [
        "## Pivoting"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5BMx7ZARZwWc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 235
        },
        "outputId": "ecc0cb77-47fe-450e-a5e2-16df0a3db34e"
      },
      "source": [
        "# Q23: pivot using city column as index and column set to date\n",
        "df_concat_inner.pivot(index='City', columns='date')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr:last-of-type th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th colspan=\"5\" halign=\"left\">Temperature</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th>2021-10-01</th>\n",
              "      <th>2021-10-02</th>\n",
              "      <th>2021-10-03</th>\n",
              "      <th>2021-10-04</th>\n",
              "      <th>2021-10-05</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>City</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Berlin</th>\n",
              "      <td>9</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>-4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>London</th>\n",
              "      <td>18</td>\n",
              "      <td>11</td>\n",
              "      <td>-2</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>New York</th>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>-1</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Paris</th>\n",
              "      <td>6</td>\n",
              "      <td>14</td>\n",
              "      <td>-5</td>\n",
              "      <td>6</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         Temperature                                            \n",
              "date      2021-10-01 2021-10-02 2021-10-03 2021-10-04 2021-10-05\n",
              "City                                                            \n",
              "Berlin             9         10          3         -4          4\n",
              "London            18         11         -2          1          9\n",
              "New York           0          5          8         -1         10\n",
              "Paris              6         14         -5          6         18"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZMf3kpGgZ7AP",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 266
        },
        "outputId": "e88ce2a9-1ef6-4f6c-afc5-20844fdc0275"
      },
      "source": [
        "# Q24: add a column with the mean temperature for each city over the 5 days\n",
        "df_concat_inner.pivot_table(index='City', columns='date', margins=True, aggfunc='mean')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr:last-of-type th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th colspan=\"6\" halign=\"left\">Temperature</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th>2021-10-01 00:00:00</th>\n",
              "      <th>2021-10-02 00:00:00</th>\n",
              "      <th>2021-10-03 00:00:00</th>\n",
              "      <th>2021-10-04 00:00:00</th>\n",
              "      <th>2021-10-05 00:00:00</th>\n",
              "      <th>All</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>City</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Berlin</th>\n",
              "      <td>9.00</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>-4.0</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>London</th>\n",
              "      <td>18.00</td>\n",
              "      <td>11</td>\n",
              "      <td>-2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>9.00</td>\n",
              "      <td>7.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>New York</th>\n",
              "      <td>0.00</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>10.00</td>\n",
              "      <td>4.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Paris</th>\n",
              "      <td>6.00</td>\n",
              "      <td>14</td>\n",
              "      <td>-5</td>\n",
              "      <td>6.0</td>\n",
              "      <td>18.00</td>\n",
              "      <td>7.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>All</th>\n",
              "      <td>8.25</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5</td>\n",
              "      <td>10.25</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                 Temperature                      ...                         \n",
              "date     2021-10-01 00:00:00 2021-10-02 00:00:00  ... 2021-10-05 00:00:00  All\n",
              "City                                              ...                         \n",
              "Berlin                  9.00                  10  ...                4.00  4.4\n",
              "London                 18.00                  11  ...                9.00  7.4\n",
              "New York                0.00                   5  ...               10.00  4.4\n",
              "Paris                   6.00                  14  ...               18.00  7.8\n",
              "All                     8.25                  10  ...               10.25  6.0\n",
              "\n",
              "[5 rows x 6 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g7p6sLDYb1e0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 669
        },
        "outputId": "f32f325c-68d9-41ba-e4cb-0228f5d4dfe0"
      },
      "source": [
        "# Q25: Use melt to get back the original dataframe structure from the pivoted one\n",
        "# City, date and temperature\n",
        "# you can sort the city values in ascending form\n",
        "# pd.unpivot(df_concat_inner)\n",
        "df_concat_inner.melt(id_vars=['date','City','Temperature']) # maintain the same order and in the original xls\n",
        "df_concat_inner"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>City</th>\n",
              "      <th>Temperature</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>London</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>London</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>London</td>\n",
              "      <td>-2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>London</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>London</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>New York</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>New York</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>New York</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>New York</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>New York</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>Paris</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>Paris</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>Paris</td>\n",
              "      <td>-5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>Paris</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>Paris</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>-4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        date      City  Temperature\n",
              "0 2021-10-01    London           18\n",
              "1 2021-10-02    London           11\n",
              "2 2021-10-03    London           -2\n",
              "3 2021-10-04    London            1\n",
              "4 2021-10-05    London            9\n",
              "5 2021-10-01  New York            0\n",
              "6 2021-10-02  New York            5\n",
              "7 2021-10-03  New York            8\n",
              "8 2021-10-04  New York           -1\n",
              "9 2021-10-05  New York           10\n",
              "0 2021-10-01     Paris            6\n",
              "1 2021-10-02     Paris           14\n",
              "2 2021-10-03     Paris           -5\n",
              "3 2021-10-04     Paris            6\n",
              "4 2021-10-05     Paris           18\n",
              "5 2021-10-01    Berlin            9\n",
              "6 2021-10-02    Berlin           10\n",
              "7 2021-10-03    Berlin            3\n",
              "8 2021-10-04    Berlin           -4\n",
              "9 2021-10-05    Berlin            4"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "7V_NuSsPtQaI",
        "outputId": "08e26a4e-35ed-4807-d263-ea1827cacc8f"
      },
      "source": [
        "print(df1)\n",
        "print(df2)\n",
        "pd.merge(left=df1, right=df2, how='inner', on='date')"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "        date      City  Temperature\n",
            "0 2021-10-01    London           18\n",
            "1 2021-10-02    London           11\n",
            "2 2021-10-03    London           -2\n",
            "3 2021-10-04    London            1\n",
            "4 2021-10-05    London            9\n",
            "5 2021-10-01  New York            0\n",
            "6 2021-10-02  New York            5\n",
            "7 2021-10-03  New York            8\n",
            "8 2021-10-04  New York           -1\n",
            "9 2021-10-05  New York           10\n",
            "        date    City  Temperature\n",
            "0 2021-10-01   Paris            6\n",
            "1 2021-10-02   Paris           14\n",
            "2 2021-10-03   Paris           -5\n",
            "3 2021-10-04   Paris            6\n",
            "4 2021-10-05   Paris           18\n",
            "5 2021-10-01  Berlin            9\n",
            "6 2021-10-02  Berlin           10\n",
            "7 2021-10-03  Berlin            3\n",
            "8 2021-10-04  Berlin           -4\n",
            "9 2021-10-05  Berlin            4\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>City_x</th>\n",
              "      <th>Temperature_x</th>\n",
              "      <th>City_y</th>\n",
              "      <th>Temperature_y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>London</td>\n",
              "      <td>18</td>\n",
              "      <td>Paris</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>London</td>\n",
              "      <td>18</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>New York</td>\n",
              "      <td>0</td>\n",
              "      <td>Paris</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>New York</td>\n",
              "      <td>0</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>London</td>\n",
              "      <td>11</td>\n",
              "      <td>Paris</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>London</td>\n",
              "      <td>11</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>New York</td>\n",
              "      <td>5</td>\n",
              "      <td>Paris</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2021-10-02</td>\n",
              "      <td>New York</td>\n",
              "      <td>5</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>London</td>\n",
              "      <td>-2</td>\n",
              "      <td>Paris</td>\n",
              "      <td>-5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>London</td>\n",
              "      <td>-2</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>New York</td>\n",
              "      <td>8</td>\n",
              "      <td>Paris</td>\n",
              "      <td>-5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>2021-10-03</td>\n",
              "      <td>New York</td>\n",
              "      <td>8</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>London</td>\n",
              "      <td>1</td>\n",
              "      <td>Paris</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>London</td>\n",
              "      <td>1</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>-4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>New York</td>\n",
              "      <td>-1</td>\n",
              "      <td>Paris</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>New York</td>\n",
              "      <td>-1</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>-4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>London</td>\n",
              "      <td>9</td>\n",
              "      <td>Paris</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>London</td>\n",
              "      <td>9</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>New York</td>\n",
              "      <td>10</td>\n",
              "      <td>Paris</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>New York</td>\n",
              "      <td>10</td>\n",
              "      <td>Berlin</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         date    City_x  Temperature_x  City_y  Temperature_y\n",
              "0  2021-10-01    London             18   Paris              6\n",
              "1  2021-10-01    London             18  Berlin              9\n",
              "2  2021-10-01  New York              0   Paris              6\n",
              "3  2021-10-01  New York              0  Berlin              9\n",
              "4  2021-10-02    London             11   Paris             14\n",
              "5  2021-10-02    London             11  Berlin             10\n",
              "6  2021-10-02  New York              5   Paris             14\n",
              "7  2021-10-02  New York              5  Berlin             10\n",
              "8  2021-10-03    London             -2   Paris             -5\n",
              "9  2021-10-03    London             -2  Berlin              3\n",
              "10 2021-10-03  New York              8   Paris             -5\n",
              "11 2021-10-03  New York              8  Berlin              3\n",
              "12 2021-10-04    London              1   Paris              6\n",
              "13 2021-10-04    London              1  Berlin             -4\n",
              "14 2021-10-04  New York             -1   Paris              6\n",
              "15 2021-10-04  New York             -1  Berlin             -4\n",
              "16 2021-10-05    London              9   Paris             18\n",
              "17 2021-10-05    London              9  Berlin              4\n",
              "18 2021-10-05  New York             10   Paris             18\n",
              "19 2021-10-05  New York             10  Berlin              4"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    }
  ]
}